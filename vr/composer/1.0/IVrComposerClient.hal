/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package android.frameworks.vr.composer@1.0;

import android.hardware.graphics.composer@2.1::IComposerClient;

interface IVrComposerClient
    extends android.hardware.graphics.composer@2.1::IComposerClient {
    /*
     * Used to annotate the layer with additional information, which must be
     * used to describe the content of the layer (ie: notification, permission,
     * etc) which allows VR window manager to treat certain layer types
     * specially.
     *
     * @param display is the display on which the layer was created.
     * @param layer is the layer affected by the change.
     * @param layer_type the type of the layer as described by the window
     * manager.
     * @param application_id the application id the layer belongs to.
     * @return error is NONE upon success. Otherwise,
     *         BAD_DISPLAY when an invalid display handle was passed in.
     *         BAD_LAYER when an invalid layer handle was passed in.
     *
     * setLayerInfo(Display display,
     *              Layer layer,
     *              uint32_t layer_type,
     *              uint32_t application_id)
     *     generates(Error error);
     */

    enum VrCommand : android.hardware.graphics.composer@2.1::IComposerClient.Command {
        SET_LAYER_INFO = 0x800 << OPCODE_SHIFT,
    };
};
